setwd("C:/Users/SAFA/Downloads/dataset")
data <- read.csv('who_suicide_statistics.csv')
install.packages()
install.packages('tidyverse')
install.packages('hrbrthemes')
install.packages('viridis')
library(tidyverse)
library(hrbrthemes)
library(viridis)
data %>%
View(data)
View(data)
data %>%
filt
data <- read.csv('winemag-data_first150k.csv')
data %>%
filter( data$price > 100 ) %>%
ggplot(aes(x=data$price)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8) +
ggtitle("Night price distribution of Airbnb appartements") +
theme_ipsum()
ggplot(data)
ggplot(data$price)
ggplot(data , aes(x=data$price,y=data$points))
ggplot(data , aes(x=data$price,y=data$points)) +
geom_density(fill="#69b3a2", color="#e9ecef", alpha=0.8)
ggplot(data , aes(x=data$price,y=data$points)) +
geom_density(fill="#69b3a2", color="#e9ecef")
ggplot(data , aes(x=data$price,y=data$points)) +
geom_density(color="red")
ggplot(data , aes(x=data$price,y=data$points)) +
geom_histogram(show.legend = FALSE)
ggplot(data , aes(x=data$price,y=data$points)) +
geom_histogram(show.legend = FALSE,color="red")
ggplot(data , aes(x=data$price)) +
geom_histogram(show.legend = FALSE,color="red")
ggplot(data , aes(x=data$points , y=data$price)) +
geom_histogram(show.legend = FALSE,color="red")
ggplot(data , aes(x=data$points)) +
geom_histogram(show.legend = FALSE,color="red")
ggplot(data , aes(x=data$points,y=data$price)) +
geom_histogram(show.legend = FALSE,color="red")
ggplot(aes(x=data$points,y=data$price)) +
geom_histogram(show.legend = FALSE,color="red")
ggplot(aes(x=data$points,y=data$price)) +
geom_histogram(show.legend = FALSE,color="red")
ggplot(data)
install.packages(VIM)
install.packages("VIM)"
;
install.packages("VIM")
library(VIM)
aggr(data)
aggr(data$country)
install.packages('tidyverse')
install.packages("tidyverse")
install.packages('cluster')
install.packages('factoextra')
data1 <- read.csv('who_suicide_statistics.csv')
View(data1)
summary(data$country)
rm(data1)
df <- data$country
library(tidyverse)  # data manipulation
library(cluster)    # clustering algorithms
library(factoextra) # clustering algorithms & visualization
library(tidyverse)
library(cluster)
df <- na.omit(df)
df <- scale(df)
df
data$description <-NULL
data$region_1 <-NULL
View(data)
data$designation <-NULL
View(data)
data$winery <-NULL
View(data)
data$region_2 <-NULL
View(data)
wine_table <- data
View(wine_table)
data$X <- NULL
wine_table <- data
wine_table$price <- NULL
wine_table$province <- NULL
wine_table$variety <- NULL
df <- wine_table
df <- na.omit(df)
df <- scale(df)
df <- scale(df$points)
head(df)
df <- wine_table
df <- na.omit(df)
df <- scale(df[1])
df <- scale(df[0])
head(df)
df <- scale(df[2])
df <- wine_table
df <- na.omit(df)
df <- scale(df[2])
head(df)
df <- wine_table
df <- na.omit(df)
df <- scale(df,center=TRUE,scale=TRUE)
typeof(df)
df <- scale(df[-1])
df
df <- wine_table
df <- na.omit(df)
df <- scale(df[-"country"])
df <- scale(df[,-1])
df
scale(wine_table)
df <- wine_table
df <- na.omit(df)
df
df <- wine_table
df <- scale(df)
df <- scale(df,na.rm=FALSE)
df <- na.omit(df)
df
wine_table
plot(wine_table$country,wine_table)
plot(x= wine_table$country,y= wine_table)
plot(x= wine_table$country,y= wine_table$points)
colnames(df)
write.csv(df,"wine_table.csv")
wine_table[0]
wine_table[1]
wine_table[2]
scale(df[2])
df
df[2]=scale(df[2])
df
distances <- get_dist(df[2])
distances <- get_dist(df)
distances <- get_dist(df[1])
distances <- get_dist(df[0])
get_dist(43)
get_dist(,443)
get_dist(5,443)
get_dist(443)
get_dist(0)
fviz_dist(df[2],gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
median(df[2])
median()
median(df)
median(df[2])
summary(df[2])
fviz_dist( 0.034627,gradient = list(low = "#00AFBB", mid = "white", high = "#FC4E07"))
dist(df[2])
summary(df[2])
data[2]
data[3]
str(data[3])
wine_table[3] <- data[3]
wine_table
str(wine_table)
distances <- get_dist(df)
rdist(df[2],df[3])
dist(df[2],df[3])
dist(df[3],df$points)
dist(df$points,df[3])
dist(df$points,3)
dist(df[2],3)
sqrt(sum((df[2]-df[3])^2))
df[3]
wine_table
View(wine_table)
View(df)
df <- wine_table
dist(df[2],df[3])
sqrt(sum((df[2]-df[3])^2))
df
df1 <- na.omit(df)
df1[2] <- scale(df[2])
df1[2] <- scale(df[3])
df1 <- df
df1
df1 <- na.omit(df[2])
df1
df1 <- na.omit(df[3])
df1
df1 <- na.omit(df)
df1
df1[3] <- scale(df[3])
df1
View(df1)
plot(x=df1$points,y=df1$price)
df1[3] <- scale(df1[3])
df1[2] <- scale(df1[2])
sqrt(sum((df[2]-df[3])^2))
dist(df[2],df[3])
dist(df1[2],df1[3])
a =dist(df1[2],df1[3])
a
install.packages('rdist')
rdist(df1[2],df1[3])
library(rdist)
rdist(df1[2],df1[3])
rdist(df1$points,df1$price)
library(Distance)
rdist(t(df1[2]),t(df1[3]))
pdist(df1[2],df1[3])
df1[2]
df1[3]
pdist(matrix(df1[2]),matrix(df1[3]))
dist(df1)
dist(df1[2])
pdist(df1)
pdist(df1,p = 2L)
pdist(df1,p = 138000)
pdist(df1[2],p = 138000)
library(istance)
library(distance)
install.packages('distanc')
install.packages('distance')
install.packages('philentropy')
library(philentropy)
distance(df,method = "euclidean")
distance(df[2],method = "euclidean")
matrix(df1[1])
distance(df1[2],method = "euclidean")
distance(df2[2],method = "euclidean")
distance(df1[3],method = "euclidean")
distance(matrix(df1[3]),method = "euclidean")
matrix(df1)
output <- matrix(unlist(df1), ncol = 4, byrow = TRUE)
ouutp
output
df1
output = as.matrix(df)
output
distance(matrix(df1[3])),method = "euclidean")
distance(output,method = "euclidean")
distance(output[2],method = "euclidean")
output = as.matrix(df[2,3])
output
output = as.matrix(df[2][3])
output = as.matrix(df1[2][3])
nostring  = df1
df1
df1[0]
df1[1]
nostring[1]
nostring[1] <- NULL
nostring
output = as.matrix(nostring)
output
distance(output,method = "euclidean")
mem.limits()
mem.limit()
memory.limit()
memory.limit(size = 140000)
distance(output,method = "euclidean")
memory.limit(size = 1555000)
distance(output,method = "euclidean")
memory.limit(size = 17537500)
memory.limit(size = 17637500)
distance(output,method = "euclidean")
memory.limit(size = 176375000000)
distance(output,method = "euclidean")
memory.limit(size = 1.75375e+10)
memory.limit(size = 17637500000)
df1
write.csv(df1,"stabilizeedilmishalioklid gerekli")
write.csv(df1,"stabilizeedilmishalioklid gerekli.csv")
memory.limit(size = 17637500000)
write.csv(df1,"nostring.csv")
write.csv(df1,"stabilizeedilmishalioklid gerekli.csv")
write.csv(nostring,"nostring.csv")
write.csv(wine_table,"wine_table2.csv")
history()
savehistory("C:/Users/SAFA/Downloads/dataset/history.Rhistory")
